services:
  tauri-build-linux:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
      - /app/src-tauri/target
    working_dir: /app
    environment:
      - CARGO_TARGET_DIR=/app/src-tauri/target
    command: >
      sh -c "
        cd src-tauri &&
        cargo tauri build &&
        mkdir -p /app/releases/linux &&
        cp -r target/release/bundle/deb/*.deb /app/releases/linux/ 2>/dev/null || true &&
        cp -r target/release/bundle/rpm/*.rpm /app/releases/linux/ 2>/dev/null || true &&
        cp -r target/release/bundle/appimage/*.AppImage /app/releases/linux/ 2>/dev/null || true &&
        echo '✅ Linux packages copied to releases/linux/'
      "

  tauri-build-windows:
    build:
      context: .
      dockerfile: Dockerfile.windows
    volumes:
      - .:/app
      - /app/node_modules
      - /app/src-tauri/target
      - xwin-cache:/tmp/xwin-cache
    working_dir: /app
    environment:
      - CARGO_TARGET_DIR=/app/src-tauri/target
      - XWIN_CACHE_DIR=/tmp/xwin-cache
    command: >
      sh -c "
        cd src-tauri &&
        cargo tauri build --runner cargo-xwin --target x86_64-pc-windows-msvc &&
        mkdir -p /app/releases/windows &&
        cp -r target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe /app/releases/windows/ 2>/dev/null || true &&
        echo '✅ Windows packages copied to releases/windows/'
      "

  tauri-dev:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
      - /app/src-tauri/target
    working_dir: /app
    ports:
      - "5000:5000"
    environment:
      - CARGO_TARGET_DIR=/app/src-tauri/target
    command: >
      sh -c "
        npm run build &&
        cd src-tauri &&
        cargo tauri dev --no-watch
      "

volumes:
  xwin-cache: